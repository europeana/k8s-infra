<source>
    @id kubernetes.app.log
    @type tail
    @label @app
    tag kubernetes.app.*
    path /var/log/containers/*.log
    # exclude all kube_system containers. This pattern also matches the NGINX Ingress. We'll handle that separately
    exclude_path ["/var/log/containers/*fluentd*.log","/var/log/containers/*ibm*.log","/var/log/containers/*rancher*.log","/var/log/containers/*_kube-system_*.log"]
    pos_file /var/log/kubernetes.app.log.pos
    read_from_head true
    <parse>
      @type regexp
      expression /^(?<time>.+) (?<stream>stdout|stderr) [^ ]* (?<log>.*)$/
      time_format  %Y-%m-%dT%H:%M:%S.%NZ
      time_key time
      time_type string
      localtime false
    </parse>
</source>

<label @app>
    # Include additional kubernetes metadata in log output.
    # These are added to a "kubernetes" property within the log event
      <filter kubernetes.app.**>
        @type kubernetes_metadata
        # Only include pod annotations starting with "fluentd/"
        # ie. fluentd/include and fluentd/multiline
        annotation_match ["^fluentd/*"]
        @id filter_kube_metadata
      </filter>

      # Sets three properties on the log event:
      # fluentd_include: value of kubernetes.annotations.fluentd/include, false otherwise
      # fluentd_multiline: value of kubernetes.annotations.fluentd/multiline, false otherwise
      # fluentd_type: app â€“ used to determine the index while writing to ES
      <filter kubernetes.app.**>
         @type record_transformer
         @id id_kubernetes_metadata.fluentd.annotations
         enable_ruby true
         <record>
           fluentd_include ${record.dig("kubernetes", "annotations", "fluentd/include") ? record.dig("kubernetes", "annotations", "fluentd/include") : ("false")}
           fluentd_multiline ${record.dig("kubernetes", "annotations", "fluentd/multiline") ? record.dig("kubernetes", "annotations", "fluentd/multiline") : ("false")}
           fluentd_type app
         </record>
       </filter>


     # Discard events without fluentd_include set to "true"
     <filter kubernetes.app.**>
        @type grep
        @id id_grep.fluentd_include
        <regexp>
           key fluentd_include
           pattern /^true$/
        </regexp>
     </filter>

    # Re-tag log event for routing
      <match kubernetes.app.**>
        @type rewrite_tag_filter
        @id kubernetes_multiline_routing
        # Re-tag events with fluentd_multiline: false as "plain.*"
        <rule>
          key fluentd_multiline
          pattern /^false$/
          tag plain.${tag}
        </rule>
        # Re-tag events with fluentd_multiline: true as "multiline.*"
        <rule>
          key fluentd_multiline
          pattern /^false$/
          invert true
          tag multiline.${tag}
        </rule>
      </match>

      # plain.* events go straight to @output
      <match plain.**>
        @type relabel
        @label @output
      </match>

      # relabel "multiline.* events for further processing"
      <match multiline.**>
        @type relabel
        @label @multiline
      </match>
    </label>

    # Handle multiline events
    <label @multiline>
      <filter multiline.**>
        @type concat
        @id id_concat.multiline
        stream_identity_key docker.container_id
        key log
        timeout_label @output
        # Application logs always start with a timestamp (TODO: make this a convention)
        multiline_start_regexp /\d{2}:\d{2}:\d{2}\.\d+/
        flush_interval 5s
        use_first_timestamp true
      </filter>

      # relabel and emit to @output
      <match multiline.**>
        @type relabel
        @label @output
      </match>
   </label>
